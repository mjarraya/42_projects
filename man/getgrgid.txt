
GETGRENT(3)              BSD Library Functions Manual              GETGRENT(3)

NNAAMMEE
     ggeettggrreenntt, ggeettggrrnnaamm, ggeettggrrnnaamm__rr, ggeettggrrggiidd, ggeettggrrggiidd__rr, ggeettggrruuuuiidd,
     ggeettggrruuuuiidd__rr, sseettggrroouuppeenntt, sseettggrreenntt, eennddggrreenntt -- group database operations

LLIIBBRRAARRYY
     Standard system libraries.

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ggrrpp..hh>>
     ##iinncclluuddee <<uuuuiidd//uuuuiidd..hh>>

     _s_t_r_u_c_t _g_r_o_u_p _*
     ggeettggrreenntt(_v_o_i_d);

     _s_t_r_u_c_t _g_r_o_u_p _*
     ggeettggrrnnaamm(_c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _i_n_t
     ggeettggrrnnaamm__rr(_c_o_n_s_t _c_h_a_r _*_n_a_m_e, _s_t_r_u_c_t _g_r_o_u_p _*_g_r_p, _c_h_a_r _*_b_u_f_f_e_r,
         _s_i_z_e___t _b_u_f_s_i_z_e, _s_t_r_u_c_t _g_r_o_u_p _*_*_r_e_s_u_l_t);

     _s_t_r_u_c_t _g_r_o_u_p _*
     ggeettggrrggiidd(_g_i_d___t _g_i_d);

     _i_n_t
     ggeettggrrggiidd__rr(_g_i_d___t _g_i_d, _s_t_r_u_c_t _g_r_o_u_p _*_g_r_p, _c_h_a_r _*_b_u_f_f_e_r, _s_i_z_e___t _b_u_f_s_i_z_e,
         _s_t_r_u_c_t _g_r_o_u_p _*_*_r_e_s_u_l_t);

     _i_n_t
     ggeettggrruuuuiidd(_u_u_i_d___t _u_u_i_d);

     _i_n_t
     ggeettggrruuuuiidd__rr(_u_u_i_d___t _u_u_i_d, _s_t_r_u_c_t _g_r_o_u_p _*_g_r_p, _c_h_a_r _*_b_u_f_f_e_r, _s_i_z_e___t _b_u_f_s_i_z_e,
         _s_t_r_u_c_t _g_r_o_u_p _*_*_r_e_s_u_l_t);

     _i_n_t
     sseettggrroouuppeenntt(_i_n_t _s_t_a_y_o_p_e_n);

     _v_o_i_d
     sseettggrreenntt(_v_o_i_d);

     _v_o_i_d
     eennddggrreenntt(_v_o_i_d);

DDEESSCCRRIIPPTTIIOONN
     These functions obtain information from opendirectoryd(8), including
     records in _/_e_t_c_/_g_r_o_u_p which is described in group(5).  Each line of the
     database is defined by the structure _g_r_o_u_p found in the include file
     <_g_r_p_._h>:

           struct group {
                   char    *gr_name;       /* group name */
                   char    *gr_passwd;     /* group password */
                   gid_t   gr_gid;         /* group id */
                   char    **gr_mem;       /* group members */
           };

     The functions ggeettggrrnnaamm(), ggeettggrrggiidd(), and ggeettggrruuuuiidd() search the group
     database for the given group name pointed to by _n_a_m_e, the group id given
     by _g_i_d, or the UUID given by _u_u_i_d respectively, returning the first one
     encountered.  Identical group names, group gids, or uuids may result in
     undefined behavior.

     Note that the groups file _/_e_t_c_/_g_r_o_u_p does not contain group UUIDs.  The
     UUID for a group may be found using mmbbrr__ggiidd__ttoo__uuuuiidd().

     On OS X, these routines are thread-safe and return a pointer to a thread-
     specific data structure.  The contents of this data structure are auto-
     matically released by subsequent calls to any of these routines on the
     same thread, or when the thread exits.  These routines are therefore
     unsuitable for use in libraries or frameworks, from where they may over-
     write the per-thread data that the calling application expects to find as
     a result of its own calls to these routines. Library and framework code
     should use the alternative reentrant variants detailed below.

     The ggeettggrreenntt() function searches all available directory services on it's
     first invocation.  It caches the returned entries in a list and returns
     group entries one at a time.

     _N_O_T_E that ggeettggrreenntt() may cause a very lengthy search for group records by
     ooppeennddiirreeccttoorryydd and may result in a large number of group records being
     cached by the calling process.  Use of this function is not advised.

     The functions ggeettggrrnnaamm__rr(), ggeettggrrggiidd__rr(), and ggeettggrruuuuiidd__rr() are alterna-
     tive versions of ggeettggrrnnaamm(), ggeettggrrggiidd(), and ggeettggrruuuuiidd() respectively.
     The caller must provide storage for the results of the search in the _g_r_p,
     _b_u_f_f_e_r, _b_u_f_s_i_z_e, and _r_e_s_u_l_t arguments.  When these functions are success-
     ful, the _g_r_p argument will be filled-in, and a pointer to that argument
     will be stored in _r_e_s_u_l_t.  If an entry is not found or an error occurs,
     _r_e_s_u_l_t will be set to NULL.

     These functions will open the group file for reading, if necessary.

     The sseettggrroouuppeenntt() function causes ggeettggrreenntt() to ``rewind'' to the begin-
     ning of the list of entries cached by a previous ggeettggrreenntt() call.  The
     cache is not cleared.  The _s_t_a_y_o_p_e_n parameter value is unused on OS X.

     The sseettggrreenntt() and eennddggrreenntt() functions clear the cached results from a
     previous ggeettggrreenntt() call.

RREETTUURRNN VVAALLUUEESS
     The functions ggeettggrreenntt(), ggeettggrrnnaamm(), and ggeettggrrggiidd(), return a pointer to
     a group structure on success or NULL if the entry is not found or if an
     error occurs.  If an error does occur, _e_r_r_n_o will be set.  Note that pro-
     grams must explicitly set _e_r_r_n_o to zero before calling any of these func-
     tions if they need to distinguish between a non-existent entry and an
     error.  The functions ggeettggrrnnaamm__rr(), ggeettggrrggiidd__rr(), and ggeettggrruuuuiidd__rr()
     return 0 if no error occurred, or an error number to indicate failure.
     It is not an error if a matching entry is not found.  (Thus, if _r_e_s_u_l_t is
     set to NULL and the return value is 0, no matching entry exists.)

     sseettggrroouuppeenntt() returns the value 1 if successful, otherwise the value 0 is
     returned.  The functions sseettggrreenntt(), eennddggrreenntt(), and sseettggrrffiillee() have no
     return value.

FFIILLEESS
     /etc/group  group database file

CCOOMMPPAATTIIBBIILLIITTYY
     The historic function sseettggrrffiillee(), which allowed the specification of
     alternate group databases, has been deprecated and is no longer avail-
     able.

SSEEEE AALLSSOO
     getpwent(3), group(5), mbr_gid_to_uuid(3,) opendirectory(8), yp(8)

SSTTAANNDDAARRDDSS
     The ggeettggrreenntt(), ggeettggrrnnaamm(), ggeettggrrnnaamm__rr(), ggeettggrrggiidd(), ggeettggrrggiidd__rr() and
     eennddggrreenntt() functions conform to ISO/IEC 9945-1:1996 (``POSIX.1'').  The
     sseettggrreenntt() function differs from that standard in that its return type is
     _i_n_t rather than _v_o_i_d.

HHIISSTTOORRYY
     The functions eennddggrreenntt(), ggeettggrreenntt(), ggeettggrrnnaamm(), ggeettggrrggiidd(), and
     sseettggrreenntt() appeared in Version 7 AT&T UNIX.  The functions sseettggrrffiillee()
     and sseettggrroouuppeenntt() appeared in 4.3BSD-Reno.  The functions ggeettggrrnnaamm__rr()
     and ggeettggrrggiidd__rr() appeared in FreeBSD 5.1.  The functions ggeettggrruuuuiidd() and
     ggeettggrruuuuiidd__rr() appeared in Mac OS X 10.8.

BBUUGGSS
     The functions ggeettggrreenntt(), ggeettggrrnnaamm(), ggeettggrrggiidd(), ggeettggrruuuuiidd(),
     sseettggrroouuppeenntt() and sseettggrreenntt() leave their results in an internal thread-
     specific memory and return a pointer to that object.  Subsequent calls to
     the same function will modify the same object.

BSD                            October 26, 2011                            BSD
